function Player.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push constant 15
pop static 4
push constant 2
pop static 11
push constant 395
pop static 0
push constant 20
pop static 2
push constant 240
pop static 1
push constant 15
pop static 3
push constant 208
pop static 8
push constant 128
pop static 9
push static 0
push static 2
sub
push static 4
call Math.divide 2
pop static 6
push static 1
push static 3
sub
push static 4
call Math.divide 2
pop static 5
call Map.new 0
pop static 10
push static 10
call Map.build 1
pop temp 0
push static 10
push constant 10
push constant 5
push constant 0
not
call Map.clear 4
pop temp 0
push static 10
push constant 10
push constant 6
push constant 0
not
call Map.clear 4
pop temp 0
push static 10
push constant 10
push constant 7
push constant 0
not
call Map.clear 4
pop temp 0
push static 10
push constant 10
push constant 8
push constant 0
not
call Map.clear 4
pop temp 0
push static 10
push constant 10
push constant 9
push constant 0
not
call Map.clear 4
pop temp 0
push pointer 0
push static 8
push static 9
push constant 0
not
call Player.show 4
pop temp 0
push constant 15
call Array.new 1
pop static 7
push constant 0
push static 7
add
push constant 13933
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push static 7
add
push constant 3424
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push static 7
add
push constant 8452
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push static 7
add
push constant 9983
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push static 7
add
push constant 31888
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push static 7
add
push constant 22232
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push static 7
add
push constant 13933
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push static 7
add
push constant 3424
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push static 7
add
push constant 8452
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push static 7
add
push constant 9983
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 10
push static 7
add
push constant 31888
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 11
push static 7
add
push constant 22232
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
push static 7
add
push constant 12344
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 13
push static 7
add
push constant 11233
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 14
push static 7
add
push constant 11399
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
return
function Player.show 0
push argument 0
pop pointer 0
push argument 3
call Screen.setColor 1
pop temp 0
push argument 1
push argument 2
push constant 5
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Player.valid 3
push argument 0
pop pointer 0
push argument 1
push static 2
lt
push argument 1
push static 0
gt
or
push argument 2
push static 3
lt
or
push argument 2
push static 1
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push argument 1
push static 2
sub
push static 4
call Math.divide 2
pop local 2
push argument 2
push static 3
sub
push static 4
call Math.divide 2
pop local 1
push static 10
push local 2
push local 1
call Map.move 3
pop local 0
push local 0
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push constant 0
not
return
function Player.move 6
push argument 0
pop pointer 0
push static 8
pop local 0
push static 9
pop local 1
push argument 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push static 4
sub
pop local 1
label IF_FALSE0
push argument 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push static 4
add
pop local 1
label IF_FALSE1
push argument 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push static 4
sub
pop local 0
label IF_FALSE2
push argument 1
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push static 4
add
pop local 0
label IF_FALSE3
push pointer 0
push local 0
push local 1
call Player.valid 3
pop local 5
push local 5
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push static 8
push static 2
sub
push static 4
call Math.divide 2
pop local 2
push static 9
push static 3
sub
push static 4
call Math.divide 2
pop local 3
push argument 1
push constant 1
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 2
push static 11
sub
pop local 2
push local 3
push static 11
add
pop local 3
push constant 0
not
pop local 4
label IF_FALSE5
push argument 1
push constant 2
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push local 2
push static 11
sub
pop local 2
push local 3
push static 11
sub
pop local 3
push constant 0
not
pop local 4
label IF_FALSE6
push argument 1
push constant 3
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push local 2
push static 11
add
pop local 2
push local 3
push static 11
sub
pop local 3
push constant 0
pop local 4
label IF_FALSE7
push argument 1
push constant 4
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push local 2
push static 11
sub
pop local 2
push local 3
push static 11
sub
pop local 3
push constant 0
pop local 4
label IF_FALSE8
push static 10
push local 2
push local 3
push local 4
call Map.fill 4
pop temp 0
push pointer 0
push static 8
push static 9
push constant 0
call Player.show 4
pop temp 0
push local 0
pop static 8
push local 1
pop static 9
push static 8
push static 2
sub
push static 4
call Math.divide 2
pop local 2
push static 9
push static 3
sub
push static 4
call Math.divide 2
pop local 3
push argument 1
push constant 1
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push local 2
push static 11
sub
pop local 2
push local 3
push static 11
sub
pop local 3
push constant 0
not
pop local 4
label IF_FALSE9
push argument 1
push constant 2
eq
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
push local 2
push static 11
sub
pop local 2
push local 3
push static 11
add
pop local 3
push constant 0
not
pop local 4
label IF_FALSE10
push argument 1
push constant 3
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push local 2
push static 11
sub
pop local 2
push local 3
push static 11
sub
pop local 3
push constant 0
pop local 4
label IF_FALSE11
push argument 1
push constant 4
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push local 2
push static 11
add
pop local 2
push local 3
push static 11
sub
pop local 3
push constant 0
pop local 4
label IF_FALSE12
push static 10
push local 2
push local 3
push local 4
call Map.clear 4
pop temp 0
push pointer 0
push static 8
push static 9
push constant 0
not
call Player.show 4
pop temp 0
label IF_FALSE4
push constant 0
return
function Player.dispose 0
push argument 0
pop pointer 0
push static 7
call Array.dispose 1
pop temp 0
push static 10
call Map.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
